<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rackspace on KenCochrane.net</title>
    <link>http://www.kencochrane.net/tags/rackspace/</link>
    <description>Recent content in Rackspace on KenCochrane.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 May 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.kencochrane.net/tags/rackspace/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Upgrading the Ubuntu linux kernel on Rackspace cloud</title>
      <link>http://www.kencochrane.net/blog/2013/05/upgrading-linux-kernel-ubuntu-rackspace-cloud/</link>
      <pubDate>Sun, 12 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.kencochrane.net/blog/2013/05/upgrading-linux-kernel-ubuntu-rackspace-cloud/</guid>
      <description>

&lt;p&gt;Yesterday I wrote a &lt;a href=&#34;%7Cfilename%7C/content/running-docker-on-rackspace-cloud.rst&#34;&gt;blog
post&lt;/a&gt; on
how to install &lt;a href=&#34;http://www.docker.com&#34;&gt;Docker&lt;/a&gt; on to &lt;a href=&#34;http://www.rackspace.com/cloud/servers/&#34;&gt;RackSpace
Cloud&lt;/a&gt;, and one of the steps
was to upgrade the kernel to the lastest one so that Docker would be
nice and stable. The problem that I found out was that there wasn&amp;rsquo;t much
information how to upgrade the kernel on the Rackspace Cloud servers, so
I thought I would put the steps here.&lt;/p&gt;

&lt;p&gt;The goal here is to upgrade Ubuntu 12.04 and 12.10 so that it has the
same kernel as 13.04. Here are the steps.&lt;/p&gt;

&lt;h1 id=&#34;ubuntu-12-04:9b026601a6e60c4436ae1781fc686565&#34;&gt;Ubuntu 12.04&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 12.04 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-12-04 3.2.0-38-virtual #61-Ubuntu SMP Tue Feb 19 12:37:47 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install the 3.8.x kernel using the PPA&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# install the new kernel
$ apt-get install linux-generic-lts-raring

# update grub so it will use the new kernel after we reboot
$ update-grub

# update-grub doesn&#39;t always work so lets make sure. ``/boot/grub/menu.lst`` was updated.
$ grep 3.8.0- /boot/grub/menu.lst

# nope it wasn&#39;t lets manually update ``/boot/grub/menu.lst``  (make sure you are searching for correct kernel version, look at initial uname -a results.)
$ sed -i s/3.2.0-38-virtual/3.8.0-19-generic/ /boot/grub/menu.lst

# once again lets make sure it worked.
$ grep 3.8.0- /boot/grub/menu.lst
title          Ubuntu 12.04.2 LTS, kernel 3.8.0-19-generic
kernel          /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash console=hvc0
initrd          /boot/initrd.img-3.8.0-19-generic
title          Ubuntu 12.04.2 LTS, kernel 3.8.0-19-generic (recovery mode)
kernel          /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash  single
initrd          /boot/initrd.img-3.8.0-19-generic

# much better.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reboot server (either via command line or console)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;login again and check to make sure the kernel was updated&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server_ip&amp;gt;
$ uname -a
Linux docker-12-04 3.8.0-19-generic #30~precise1-Ubuntu SMP Wed May 1 22:26:36 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

# nice 3.8.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;ubuntu-12-10:9b026601a6e60c4436ae1781fc686565&#34;&gt;Ubuntu 12.10&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 12.10 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-12-10 3.5.0-25-generic #39-Ubuntu SMP Mon Feb 25 18:26:58 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install the 3.8.x kernel using the ubuntu-x-swat PPA&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# add the ppa to get the right kernel package
$ echo deb http://ppa.launchpad.net/ubuntu-x-swat/q-lts-backport/ubuntu quantal main &amp;gt; /etc/apt/sources.list.d/xswat.list

# add the key for the ppa
$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B22AB97AF1CDFA9

# update packages again
$ apt-get update

# install the new kernel
$ apt-get install linux-image-3.8.0-19-generic

# make sure grub has been updated.
$ grep 3.8.0- /boot/grub/menu.lst
title   Ubuntu 12.10, kernel 3.8.0-19-generic
kernel  /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash console=hvc0
initrd  /boot/initrd.img-3.8.0-19-generic
title   Ubuntu 12.10, kernel 3.8.0-19-generic (recovery mode)
kernel  /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash  single
initrd  /boot/initrd.img-3.8.0-19-generic

# looks good. If it doesn&#39;t work for you, look at the notes for 12.04 to fix.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reboot server (either via command line or console)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;login again and check to make sure the kernel was updated&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server_ip&amp;gt;
$ uname -a
Linux docker-12-10 3.8.0-19-generic #29~precise2-Ubuntu SMP Fri Apr 19 16:15:35 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

# nice 3.8.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Running Docker on Rackspace with Ubuntu</title>
      <link>http://www.kencochrane.net/blog/2013/05/running-docker-on-rackspace-cloud/</link>
      <pubDate>Sat, 11 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.kencochrane.net/blog/2013/05/running-docker-on-rackspace-cloud/</guid>
      <description>

&lt;p&gt;I have been playing with &lt;a href=&#34;http://www.docker.com&#34;&gt;Docker&lt;/a&gt; a lot lately,
and it got me wondering how hard it would be to run Docker on the
different Cloud providers. I noticed there were already directions on
how to install on &lt;a href=&#34;http://docs.docker.com/en/latest/installation/amazon.html&#34;&gt;Amazon
EC2&lt;/a&gt; but
nothing for the Rackspace Cloud.&lt;/p&gt;

&lt;p&gt;If you would like to run &lt;a href=&#34;http://www.docker.com&#34;&gt;Docker&lt;/a&gt; on the
&lt;a href=&#34;http://www.rackspace.com/cloud/servers/&#34;&gt;RackSpace Cloud&lt;/a&gt; using
&lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; you&amp;rsquo;re in luck. I just spent the
afternoon figuring out how to get it installed on Ubuntu 12.04, 12.10,
and 13.04, and I have included my notes below. 13.04 is the easiest to
get up and running since it has the most recent kernel, but the others
aren&amp;rsquo;t too bad either, they just need a few more steps, to get them up
to par.&lt;/p&gt;

&lt;p&gt;I would love to expand this to other distros on Rackspace, so if you
come up with more, send me a note, and so I can link to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update: 05-12-2013&lt;/strong&gt; I have updated some information given some
feedback by others. Also added a troubleshooting section.&lt;/p&gt;

&lt;h1 id=&#34;ubuntu-12-04:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Ubuntu 12.04&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 12.04 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-12-04 3.2.0-38-virtual #61-Ubuntu SMP Tue Feb 19 12:37:47 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now lets install Docker and it&amp;rsquo;s dependencies. To keep things
simple, we will use the Docker install script. It will take a couple
of minutes. (see below if you want to install via package)&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ curl get.docker.io | sudo sh -x
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Docker runs best with a new kernel, so lets use 3.8.x&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# install the new kernel
$ apt-get install linux-generic-lts-raring

# update grub so it will use the new kernel after we reboot
$ update-grub

# update-grub doesn&#39;t always work so lets make sure. ``/boot/grub/menu.lst`` was updated.
$ grep 3.8.0- /boot/grub/menu.lst

# nope it wasn&#39;t lets manually update ``/boot/grub/menu.lst``  (make sure you are searching for correct kernel version, look at initial uname -a results.)
$ sed -i s/3.2.0-38-virtual/3.8.0-19-generic/ /boot/grub/menu.lst

# once again lets make sure it worked.
$ grep 3.8.0- /boot/grub/menu.lst
title          Ubuntu 12.04.2 LTS, kernel 3.8.0-19-generic
kernel          /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash console=hvc0
initrd          /boot/initrd.img-3.8.0-19-generic
title          Ubuntu 12.04.2 LTS, kernel 3.8.0-19-generic (recovery mode)
kernel          /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash  single
initrd          /boot/initrd.img-3.8.0-19-generic

# much better.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reboot server (either via command line or console)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;login again and check to make sure the kernel was updated&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server_ip&amp;gt;
$ uname -a
Linux docker-12-04 3.8.0-19-generic #30~precise1-Ubuntu SMP Wed May 1 22:26:36 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

# nice 3.8.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make sure docker is running and test it out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ start dockerd
$ docker pull busybox
$ docker run busybox /bin/echo hello world
hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;alternate-install:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Alternate install&lt;/h2&gt;

&lt;p&gt;If you don&amp;rsquo;t want to run the get.docker.io script and want to use
packages instead, you can use the docker PPA. Here is how you use it.
Replace step 5 with the following 3 steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add the custom package sources to your apt sources list. Copy and
paste the following lines at once.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ sudo sh -c &amp;quot;echo &#39;deb http://ppa.launchpad.net/dotcloud/lxc-docker/ubuntu precise main&#39; &amp;gt;&amp;gt; /etc/apt/sources.list&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Update your sources. You will see a warning that GPG signatures
cannot be verified.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Now install it, you will see another warning that the package cannot
be authenticated. Confirm install.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get install lxc-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;ubuntu-12-10:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Ubuntu 12.10&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 12.10 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-12-10 3.5.0-25-generic #39-Ubuntu SMP Mon Feb 25 18:26:58 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now lets install Docker and it&amp;rsquo;s dependencies. To keep things
simple, we will use the Docker install script. It will take a couple
of minutes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ curl get.docker.io | sudo sh -x
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Docker runs best with a new kernel, so lets use 3.8.x&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# add the ppa to get the right kernel package
$ echo deb http://ppa.launchpad.net/ubuntu-x-swat/q-lts-backport/ubuntu quantal main &amp;gt; /etc/apt/sources.list.d/xswat.list

# add the key for the ppa
$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B22AB97AF1CDFA9

# update packages again
$ apt-get update

# install the new kernel
$ apt-get install linux-image-3.8.0-19-generic

# make sure grub has been updated.
$ grep 3.8.0- /boot/grub/menu.lst
title   Ubuntu 12.10, kernel 3.8.0-19-generic
kernel  /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash console=hvc0
initrd  /boot/initrd.img-3.8.0-19-generic
title   Ubuntu 12.10, kernel 3.8.0-19-generic (recovery mode)
kernel  /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash  single
initrd  /boot/initrd.img-3.8.0-19-generic

# looks good. If it doesn&#39;t work for you, look at the notes for 12.04 to fix.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reboot server (either via command line or console)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;login again and check to make sure the kernel was updated&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server_ip&amp;gt;
$ uname -a
Linux docker-12-10 3.8.0-19-generic #29~precise2-Ubuntu SMP Fri Apr 19 16:15:35 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

# nice 3.8.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make sure docker is running and test it out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ start dockerd
$ docker pull busybox
$ docker run busybox /bin/echo hello world
hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;ubuntu-13-04:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Ubuntu 13.04&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 13.04 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-1304 3.8.0-19-generic #29-Ubuntu SMP Wed Apr 17 18:16:28 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now lets install Docker and it&amp;rsquo;s dependencies. To keep things
simple, we will use the Docker install script. It will take a couple
of minutes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ curl get.docker.io | sudo sh -x
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make sure docker is running and test it out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ start dockerd
$ docker pull busybox
$ docker run busybox /bin/echo hello world
hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;what-s-next:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;What&amp;rsquo;s Next&lt;/h1&gt;

&lt;p&gt;Now that you have Docker running on a server, you can look at the
different &lt;a href=&#34;http://docs.docker.com/en/latest/examples/&#34;&gt;Docker examples&lt;/a&gt;
in the documentation to see how it works, and then build something, and
let everyone know what you have built. If you have any issues or
suggestions, open a github issue and let everyone know. Docker is a new
project, and it is moving quick, so any suggestions that you have might
help shape the future of the project.&lt;/p&gt;

&lt;h1 id=&#34;trouble-shooting:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Trouble shooting&lt;/h1&gt;

&lt;p&gt;If you are pulling a repo and you get an error like this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;Error: exit status 1: bsdtar: Linkname can&#39;t be converted from UTF-8 to current locale.
bsdtar: Linkname can&#39;t be converted from UTF-8 to current locale.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It means the the docker daemon doesn&amp;rsquo;t have the correct locales loaded
on startup. To fix it make sure your init script looks something like
this.&lt;/p&gt;

&lt;p&gt;Make sure the path to the docker binary is correct because in some
installs it might be &lt;code&gt;/usr/local/bin&lt;/code&gt; and others &lt;code&gt;/usr/local/&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;description     &amp;quot;Run docker&amp;quot;

start on runlevel [2345]
stop on starting rc RUNLEVEL=[016]
respawn

script
    test -f /etc/default/locale &amp;amp;&amp;amp; . /etc/default/locale || true
    LANG=$LANG LC_ALL=$LANG /usr/local/bin/docker -d
end script
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>