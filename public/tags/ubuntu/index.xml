<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on KenCochrane.net</title>
    <link>http://www.kencochrane.net/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on KenCochrane.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Jun 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.kencochrane.net/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Running Docker on Digital Ocean with Ubuntu</title>
      <link>http://www.kencochrane.net/blog/2013/06/running-docker-on-digital-ocean/</link>
      <pubDate>Fri, 07 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.kencochrane.net/blog/2013/06/running-docker-on-digital-ocean/</guid>
      <description>

&lt;p&gt;I recently wrote a post on how to get &lt;a href=&#34;http://www.docker.com&#34;&gt;Docker&lt;/a&gt; up
and &lt;a href=&#34;http://kencochrane.net/blog/2013/05/running-docker-on-rackspace-cloud/&#34;&gt;running on
Rackspace&lt;/a&gt;
and since then I have received some requests on how to get it up and
running on other hosts. One of those hosts is &lt;a href=&#34;https://www.digitalocean.com/?refcode=3313a09727d4&#34;&gt;Digital
Ocean&lt;/a&gt; a hot new
Cloud hosting provider that offers a 512MB 20GB SSD VPS for only \$5.00
/ month. A really great deal, and also a great price if you want to play
around with some new tool and not have to worry about possibly breaking
a production server. This post should guide you though the process of
getting an Ubuntu 12.04 and 13.04 VPS up and running with Docker.&lt;/p&gt;

&lt;h1 id=&#34;step-1-register:f6acbe7546ab0bafe3ff3295f5ba358a&#34;&gt;Step 1: Register&lt;/h1&gt;

&lt;p&gt;First things first, if you don&amp;rsquo;t already have a Digital Ocean account,
you will need to create one. If you &lt;a href=&#34;https://www.digitalocean.com/?refcode=3313a09727d4&#34;&gt;follow this
link&lt;/a&gt;, click sign up
and enter this promo code &lt;strong&gt;VPSERS10&lt;/strong&gt;, you will be given a $10 credit
to try out the service.&lt;/p&gt;

&lt;h1 id=&#34;step-2-billing:f6acbe7546ab0bafe3ff3295f5ba358a&#34;&gt;Step 2: Billing&lt;/h1&gt;

&lt;p&gt;To prevent abuse, Digital Ocean requires that you enter a credit card
before you can spin up a server. Go ahead and do that now. Once you put
in your information you should see a screen like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.kencochrane.net/digital-ocean/startup.png&#34; alt=&#34;image&#34; /&gt;{.img-polaroid}&lt;/p&gt;

&lt;h1 id=&#34;step-3-ssh-keys:f6acbe7546ab0bafe3ff3295f5ba358a&#34;&gt;Step 3 SSH keys&lt;/h1&gt;

&lt;p&gt;To make your life easier, I would add a public SSH key to your account.
If you don&amp;rsquo;t add an SSH key then you will be emailed a root password
when the server is setup. It is easier and more secure to add your
public key, and then select that key when building the server, and they
will automatically add the key to your server for you. If you don&amp;rsquo;t have
a SSH key, don&amp;rsquo;t worry they are easy to create. Just do a quick web
search, and there are a ton of different guide out there to help you get
one setup.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.kencochrane.net/digital-ocean/ssh_key.png&#34; alt=&#34;image&#34; /&gt;{.img-polaroid}&lt;/p&gt;

&lt;h1 id=&#34;step-4-create-droplet:f6acbe7546ab0bafe3ff3295f5ba358a&#34;&gt;Step 4: Create Droplet&lt;/h1&gt;

&lt;p&gt;Digital Ocean calls their servers Droplets. Lets create a droplet. Click
on the big &amp;ldquo;Create&amp;rdquo; button on the control panel.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enter a hostname at the top.&lt;/li&gt;
&lt;li&gt;Pick your size&lt;/li&gt;
&lt;li&gt;select your region&lt;/li&gt;
&lt;li&gt;Select your image. Docker currently only runs on a &lt;strong&gt;64bit OS&lt;/strong&gt;, and
needs a fairly recent kernel (3.8+) with AUFS enabled. The only
images on Digital Ocean that will currently work with Docker are
&lt;strong&gt;Ubuntu 13.04 x64 Server&lt;/strong&gt;, and &lt;strong&gt;Ubuntu 12.04 x64 Server&lt;/strong&gt;. I&amp;rsquo;ll
cover the install instructions for those two options below.&lt;/li&gt;
&lt;li&gt;Pick your SSH key that you added previously. If you don&amp;rsquo;t pick one,
your root password will be emailed to you.&lt;/li&gt;
&lt;li&gt;Enable VirtIO&lt;/li&gt;
&lt;li&gt;Click the big &amp;ldquo;Create Droplet&amp;rdquo; button at the bottom.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://www.kencochrane.net/digital-ocean/select_distro_ubuntu_12_04.png&#34; alt=&#34;image&#34; /&gt;{.img-polaroid}&lt;/p&gt;

&lt;p&gt;Droplet getting created&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.kencochrane.net/digital-ocean/create_droplet.png&#34; alt=&#34;image&#34; /&gt;{.img-polaroid}&lt;/p&gt;

&lt;p&gt;After about 60 seconds you should have a cloudlet created with an IP
address. Now pick the distribution you picked below and follow the rest
of the directions.&lt;/p&gt;

&lt;h1 id=&#34;ubuntu-12-04-64bit-server:f6acbe7546ab0bafe3ff3295f5ba358a&#34;&gt;Ubuntu 12.04 64bit Server&lt;/h1&gt;

&lt;h2 id=&#34;upgrade-kernel:f6acbe7546ab0bafe3ff3295f5ba358a&#34;&gt;Upgrade kernel&lt;/h2&gt;

&lt;p&gt;The default kernel with 12.04 doesn&amp;rsquo;t work well with Docker so we are
going to upgrade to the same one that is used by 13.04. To do this you
will go into your control panel for your droplet, and go into the
settings tab and change the kernel pull down to &amp;ldquo;Ubuntu
13.04-x64-vmlinuz-3.8.0-23-generic&amp;rdquo; and click change.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.kencochrane.net/digital-ocean/change_kernel.png&#34; alt=&#34;image&#34; /&gt;{.img-polaroid}&lt;/p&gt;

&lt;p&gt;In order for the kernel change to take affect you will need to power
cycle the droplet. Click on the power tab, and then hit the &amp;ldquo;Power
Cycle&amp;rdquo; button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.kencochrane.net/digital-ocean/power_cycle.png&#34; alt=&#34;image&#34; /&gt;{.img-polaroid}&lt;/p&gt;

&lt;h2 id=&#34;login-to-server:f6acbe7546ab0bafe3ff3295f5ba358a&#34;&gt;Login to server&lt;/h2&gt;

&lt;p&gt;Now that you have the new kernel you need to login to the server to
install the rest of the stuff.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;your_ip_address&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s check to make sure you have the right kernel. It should show a 3.8
kernel if you did everything right.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-1 3.8.0-23-generic #34-Ubuntu SMP Wed May 29 20:22:58 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s install some dependencies now.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install linux-image-generic-lts-raring
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you see this, just pick the default (already selected) and hit OK.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.kencochrane.net/digital-ocean/kernel_menu.png&#34; alt=&#34;image&#34; /&gt;{.img-polaroid}&lt;/p&gt;

&lt;p&gt;Install Docker from the Docker PPA&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ sudo apt-get install python-software-properties &amp;amp;&amp;amp; sudo add-apt-repository ppa:dotcloud/lxc-docker
$ sudo apt-get update
$ sudo apt-get install lxc-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Docker should have been installed and started up. lets test to make sure
it works.&lt;/p&gt;

&lt;p&gt;``` {.sourceCode .bash
 $ docker ps
 ID                  IMAGE               COMMAND             CREATED             STATUS              PORTS}
$ docker version
Client version: 0.4.0
Server version: 0.4.0
Go version: go1.0.3&lt;/p&gt;

&lt;p&gt;$ docker run base /bin/echo hello world
hello world&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Hopefully it worked. If not, feel free to ask questions on \#docker on
freenode, or [submit a support
ticket](https://github.com/docker/docker/issues?labels=doc&amp;amp;state=open).

Ubuntu 13.04 64bit Server
=========================

13.04 comes with the 3.8 kernel, so we won&#39;t need to do anything kernel
related, which makes this install much simpler compared to 12.04.

Install the dependencies

``` {.sourceCode .bash}
$ sudo apt-get update
$ sudo apt-get install linux-image-extra-`uname -r`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you see this, just pick the default (already selected) and hit OK.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.kencochrane.net/digital-ocean/kernel_menu.png&#34; alt=&#34;image&#34; /&gt;{.img-polaroid}&lt;/p&gt;

&lt;p&gt;Install Docker&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ sudo apt-get install software-properties-common
$ sudo add-apt-repository ppa:dotcloud/lxc-docker
$ sudo apt-get update
$ sudo apt-get install lxc-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Docker should have been installed and started up. lets test to make sure
it works.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ docker ps
ID                  IMAGE               COMMAND             CREATED             STATUS              PORTS

$ docker version
Client version: 0.4.0
Server version: 0.4.0
Go version: go1.0.3

$ docker run base /bin/echo hello world
hello world
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hopefully it worked. If not, feel free to ask questions on #docker on
freenode, or &lt;a href=&#34;https://github.com/docker/docker/issues?labels=doc&amp;amp;state=open&#34;&gt;submit a support
ticket&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;conclusion:f6acbe7546ab0bafe3ff3295f5ba358a&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Hopefully now you have the knowledge to go and setup your own Docker
server on Digital Ocean. If you have any issues, or questions feel free
to submit the questions below or visit #docker on freenode&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrading the Ubuntu linux kernel on Rackspace cloud</title>
      <link>http://www.kencochrane.net/blog/2013/05/upgrading-linux-kernel-ubuntu-rackspace-cloud/</link>
      <pubDate>Sun, 12 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.kencochrane.net/blog/2013/05/upgrading-linux-kernel-ubuntu-rackspace-cloud/</guid>
      <description>

&lt;p&gt;Yesterday I wrote a &lt;a href=&#34;%7Cfilename%7C/content/running-docker-on-rackspace-cloud.rst&#34;&gt;blog
post&lt;/a&gt; on
how to install &lt;a href=&#34;http://www.docker.com&#34;&gt;Docker&lt;/a&gt; on to &lt;a href=&#34;http://www.rackspace.com/cloud/servers/&#34;&gt;RackSpace
Cloud&lt;/a&gt;, and one of the steps
was to upgrade the kernel to the lastest one so that Docker would be
nice and stable. The problem that I found out was that there wasn&amp;rsquo;t much
information how to upgrade the kernel on the Rackspace Cloud servers, so
I thought I would put the steps here.&lt;/p&gt;

&lt;p&gt;The goal here is to upgrade Ubuntu 12.04 and 12.10 so that it has the
same kernel as 13.04. Here are the steps.&lt;/p&gt;

&lt;h1 id=&#34;ubuntu-12-04:9b026601a6e60c4436ae1781fc686565&#34;&gt;Ubuntu 12.04&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 12.04 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-12-04 3.2.0-38-virtual #61-Ubuntu SMP Tue Feb 19 12:37:47 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install the 3.8.x kernel using the PPA&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# install the new kernel
$ apt-get install linux-generic-lts-raring

# update grub so it will use the new kernel after we reboot
$ update-grub

# update-grub doesn&#39;t always work so lets make sure. ``/boot/grub/menu.lst`` was updated.
$ grep 3.8.0- /boot/grub/menu.lst

# nope it wasn&#39;t lets manually update ``/boot/grub/menu.lst``  (make sure you are searching for correct kernel version, look at initial uname -a results.)
$ sed -i s/3.2.0-38-virtual/3.8.0-19-generic/ /boot/grub/menu.lst

# once again lets make sure it worked.
$ grep 3.8.0- /boot/grub/menu.lst
title          Ubuntu 12.04.2 LTS, kernel 3.8.0-19-generic
kernel          /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash console=hvc0
initrd          /boot/initrd.img-3.8.0-19-generic
title          Ubuntu 12.04.2 LTS, kernel 3.8.0-19-generic (recovery mode)
kernel          /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash  single
initrd          /boot/initrd.img-3.8.0-19-generic

# much better.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reboot server (either via command line or console)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;login again and check to make sure the kernel was updated&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server_ip&amp;gt;
$ uname -a
Linux docker-12-04 3.8.0-19-generic #30~precise1-Ubuntu SMP Wed May 1 22:26:36 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

# nice 3.8.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;ubuntu-12-10:9b026601a6e60c4436ae1781fc686565&#34;&gt;Ubuntu 12.10&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 12.10 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-12-10 3.5.0-25-generic #39-Ubuntu SMP Mon Feb 25 18:26:58 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install the 3.8.x kernel using the ubuntu-x-swat PPA&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# add the ppa to get the right kernel package
$ echo deb http://ppa.launchpad.net/ubuntu-x-swat/q-lts-backport/ubuntu quantal main &amp;gt; /etc/apt/sources.list.d/xswat.list

# add the key for the ppa
$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B22AB97AF1CDFA9

# update packages again
$ apt-get update

# install the new kernel
$ apt-get install linux-image-3.8.0-19-generic

# make sure grub has been updated.
$ grep 3.8.0- /boot/grub/menu.lst
title   Ubuntu 12.10, kernel 3.8.0-19-generic
kernel  /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash console=hvc0
initrd  /boot/initrd.img-3.8.0-19-generic
title   Ubuntu 12.10, kernel 3.8.0-19-generic (recovery mode)
kernel  /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash  single
initrd  /boot/initrd.img-3.8.0-19-generic

# looks good. If it doesn&#39;t work for you, look at the notes for 12.04 to fix.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reboot server (either via command line or console)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;login again and check to make sure the kernel was updated&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server_ip&amp;gt;
$ uname -a
Linux docker-12-10 3.8.0-19-generic #29~precise2-Ubuntu SMP Fri Apr 19 16:15:35 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

# nice 3.8.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Running Docker on Rackspace with Ubuntu</title>
      <link>http://www.kencochrane.net/blog/2013/05/running-docker-on-rackspace-cloud/</link>
      <pubDate>Sat, 11 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.kencochrane.net/blog/2013/05/running-docker-on-rackspace-cloud/</guid>
      <description>

&lt;p&gt;I have been playing with &lt;a href=&#34;http://www.docker.com&#34;&gt;Docker&lt;/a&gt; a lot lately,
and it got me wondering how hard it would be to run Docker on the
different Cloud providers. I noticed there were already directions on
how to install on &lt;a href=&#34;http://docs.docker.com/en/latest/installation/amazon.html&#34;&gt;Amazon
EC2&lt;/a&gt; but
nothing for the Rackspace Cloud.&lt;/p&gt;

&lt;p&gt;If you would like to run &lt;a href=&#34;http://www.docker.com&#34;&gt;Docker&lt;/a&gt; on the
&lt;a href=&#34;http://www.rackspace.com/cloud/servers/&#34;&gt;RackSpace Cloud&lt;/a&gt; using
&lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; you&amp;rsquo;re in luck. I just spent the
afternoon figuring out how to get it installed on Ubuntu 12.04, 12.10,
and 13.04, and I have included my notes below. 13.04 is the easiest to
get up and running since it has the most recent kernel, but the others
aren&amp;rsquo;t too bad either, they just need a few more steps, to get them up
to par.&lt;/p&gt;

&lt;p&gt;I would love to expand this to other distros on Rackspace, so if you
come up with more, send me a note, and so I can link to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update: 05-12-2013&lt;/strong&gt; I have updated some information given some
feedback by others. Also added a troubleshooting section.&lt;/p&gt;

&lt;h1 id=&#34;ubuntu-12-04:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Ubuntu 12.04&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 12.04 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-12-04 3.2.0-38-virtual #61-Ubuntu SMP Tue Feb 19 12:37:47 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now lets install Docker and it&amp;rsquo;s dependencies. To keep things
simple, we will use the Docker install script. It will take a couple
of minutes. (see below if you want to install via package)&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ curl get.docker.io | sudo sh -x
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Docker runs best with a new kernel, so lets use 3.8.x&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# install the new kernel
$ apt-get install linux-generic-lts-raring

# update grub so it will use the new kernel after we reboot
$ update-grub

# update-grub doesn&#39;t always work so lets make sure. ``/boot/grub/menu.lst`` was updated.
$ grep 3.8.0- /boot/grub/menu.lst

# nope it wasn&#39;t lets manually update ``/boot/grub/menu.lst``  (make sure you are searching for correct kernel version, look at initial uname -a results.)
$ sed -i s/3.2.0-38-virtual/3.8.0-19-generic/ /boot/grub/menu.lst

# once again lets make sure it worked.
$ grep 3.8.0- /boot/grub/menu.lst
title          Ubuntu 12.04.2 LTS, kernel 3.8.0-19-generic
kernel          /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash console=hvc0
initrd          /boot/initrd.img-3.8.0-19-generic
title          Ubuntu 12.04.2 LTS, kernel 3.8.0-19-generic (recovery mode)
kernel          /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash  single
initrd          /boot/initrd.img-3.8.0-19-generic

# much better.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reboot server (either via command line or console)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;login again and check to make sure the kernel was updated&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server_ip&amp;gt;
$ uname -a
Linux docker-12-04 3.8.0-19-generic #30~precise1-Ubuntu SMP Wed May 1 22:26:36 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

# nice 3.8.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make sure docker is running and test it out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ start dockerd
$ docker pull busybox
$ docker run busybox /bin/echo hello world
hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;alternate-install:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Alternate install&lt;/h2&gt;

&lt;p&gt;If you don&amp;rsquo;t want to run the get.docker.io script and want to use
packages instead, you can use the docker PPA. Here is how you use it.
Replace step 5 with the following 3 steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add the custom package sources to your apt sources list. Copy and
paste the following lines at once.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ sudo sh -c &amp;quot;echo &#39;deb http://ppa.launchpad.net/dotcloud/lxc-docker/ubuntu precise main&#39; &amp;gt;&amp;gt; /etc/apt/sources.list&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Update your sources. You will see a warning that GPG signatures
cannot be verified.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;Now install it, you will see another warning that the package cannot
be authenticated. Confirm install.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get install lxc-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;ubuntu-12-10:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Ubuntu 12.10&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 12.10 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-12-10 3.5.0-25-generic #39-Ubuntu SMP Mon Feb 25 18:26:58 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now lets install Docker and it&amp;rsquo;s dependencies. To keep things
simple, we will use the Docker install script. It will take a couple
of minutes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ curl get.docker.io | sudo sh -x
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Docker runs best with a new kernel, so lets use 3.8.x&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# add the ppa to get the right kernel package
$ echo deb http://ppa.launchpad.net/ubuntu-x-swat/q-lts-backport/ubuntu quantal main &amp;gt; /etc/apt/sources.list.d/xswat.list

# add the key for the ppa
$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B22AB97AF1CDFA9

# update packages again
$ apt-get update

# install the new kernel
$ apt-get install linux-image-3.8.0-19-generic

# make sure grub has been updated.
$ grep 3.8.0- /boot/grub/menu.lst
title   Ubuntu 12.10, kernel 3.8.0-19-generic
kernel  /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash console=hvc0
initrd  /boot/initrd.img-3.8.0-19-generic
title   Ubuntu 12.10, kernel 3.8.0-19-generic (recovery mode)
kernel  /boot/vmlinuz-3.8.0-19-generic root=/dev/xvda1 ro quiet splash  single
initrd  /boot/initrd.img-3.8.0-19-generic

# looks good. If it doesn&#39;t work for you, look at the notes for 12.04 to fix.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reboot server (either via command line or console)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;login again and check to make sure the kernel was updated&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server_ip&amp;gt;
$ uname -a
Linux docker-12-10 3.8.0-19-generic #29~precise2-Ubuntu SMP Fri Apr 19 16:15:35 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux

# nice 3.8.
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make sure docker is running and test it out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ start dockerd
$ docker pull busybox
$ docker run busybox /bin/echo hello world
hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;ubuntu-13-04:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Ubuntu 13.04&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Build an Ubuntu 13.04 server using the &amp;ldquo;Next generation cloud
servers&amp;rdquo;, with your desired size. It will give you the password,
keep that you will need it later.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When the server is up and running ssh into the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ ssh root@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once you are logged in you should check what kernel version you
are running.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ uname -a
Linux docker-1304 3.8.0-19-generic #29-Ubuntu SMP Wed Apr 17 18:16:28 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Let&amp;rsquo;s update the server package list&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now lets install Docker and it&amp;rsquo;s dependencies. To keep things
simple, we will use the Docker install script. It will take a couple
of minutes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ curl get.docker.io | sudo sh -x
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make sure docker is running and test it out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ start dockerd
$ docker pull busybox
$ docker run busybox /bin/echo hello world
hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;what-s-next:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;What&amp;rsquo;s Next&lt;/h1&gt;

&lt;p&gt;Now that you have Docker running on a server, you can look at the
different &lt;a href=&#34;http://docs.docker.com/en/latest/examples/&#34;&gt;Docker examples&lt;/a&gt;
in the documentation to see how it works, and then build something, and
let everyone know what you have built. If you have any issues or
suggestions, open a github issue and let everyone know. Docker is a new
project, and it is moving quick, so any suggestions that you have might
help shape the future of the project.&lt;/p&gt;

&lt;h1 id=&#34;trouble-shooting:f2623c526ea98fcfa3c30f7d4e215bfa&#34;&gt;Trouble shooting&lt;/h1&gt;

&lt;p&gt;If you are pulling a repo and you get an error like this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;Error: exit status 1: bsdtar: Linkname can&#39;t be converted from UTF-8 to current locale.
bsdtar: Linkname can&#39;t be converted from UTF-8 to current locale.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It means the the docker daemon doesn&amp;rsquo;t have the correct locales loaded
on startup. To fix it make sure your init script looks something like
this.&lt;/p&gt;

&lt;p&gt;Make sure the path to the docker binary is correct because in some
installs it might be &lt;code&gt;/usr/local/bin&lt;/code&gt; and others &lt;code&gt;/usr/local/&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;description     &amp;quot;Run docker&amp;quot;

start on runlevel [2345]
stop on starting rc RUNLEVEL=[016]
respawn

script
    test -f /etc/default/locale &amp;amp;&amp;amp; . /etc/default/locale || true
    LANG=$LANG LC_ALL=$LANG /usr/local/bin/docker -d
end script
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>