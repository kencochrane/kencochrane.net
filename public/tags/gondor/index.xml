<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gondor on KenCochrane.net</title>
    <link>http://www.kencochrane.net/tags/gondor/</link>
    <description>Recent content in Gondor on KenCochrane.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jun 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.kencochrane.net/tags/gondor/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Django Hosting Roundup: (Ep.io vs Gondor.io vs DotCloud vs Heroku vs AppHosted vs DjangoZoom) Who wins?</title>
      <link>http://www.kencochrane.net/blog/2011/06/django-hosting-roundup-who-wins/</link>
      <pubDate>Mon, 06 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://www.kencochrane.net/blog/2011/06/django-hosting-roundup-who-wins/</guid>
      <description>

&lt;h1 id=&#34;updates:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Updates&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Updated 2/16/2012: Full disclosure. On Feb 16th 2012, I accepted a
job with dotCloud. I plan on keeping this blog post up to date
and impartial. If you think there are any errors, please let me know
in the comments below.&lt;/li&gt;
&lt;li&gt;Updated 1/26/2012: Updated Gondor.io with info from Donald Stufft.&lt;/li&gt;
&lt;li&gt;Updated 01/24/2012: changed gondor.io to include SSL support&lt;/li&gt;
&lt;li&gt;Updated 01/01/2012: Added Heroku and updated ep.io, gondor.io,
and dotcloud.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;intro:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Intro&lt;/h1&gt;

&lt;p&gt;For the past 6 weeks I have been trying out all of the new django/python
hosting services that are currently available today, and I have been
writing about my experiences along the way. It only makes sense to
conclude this series of articles with one last article comparing all of
the services against each other. It is important to note that many of
these services are still in development and aren&amp;rsquo;t even available to the
general public, so I&amp;rsquo;ll try to keep this article up to date as these
services change over time. With that said, don&amp;rsquo;t take my word for it, go
out and try all of these services on your own and find out which one you
like the best, you won&amp;rsquo;t be disappointed.&lt;/p&gt;

&lt;h1 id=&#34;quick-recap:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Quick Recap&lt;/h1&gt;

&lt;h2 id=&#34;ep-io:bcec1efcbef3921a30bfadad97f88500&#34;&gt;ep.io&lt;/h2&gt;

&lt;p&gt;Blog post: &lt;a href=&#34;http://kencochrane.net/blog/2011/04/my-experiences-with-epio/&#34;&gt;My Experiences with
ep.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pretty solid offering, with a nice set of features and a decent price.
Good set of documentation.&lt;/p&gt;

&lt;p&gt;[&lt;strong&gt;Update&lt;/strong&gt;: Epio closed down on May 31st 2012 ]&lt;/p&gt;

&lt;h2 id=&#34;gondor-io:bcec1efcbef3921a30bfadad97f88500&#34;&gt;gondor.io&lt;/h2&gt;

&lt;p&gt;Blog post: &lt;a href=&#34;http://kencochrane.net/blog/2011/04/my-day-gondorio/&#34;&gt;My day in
gondor.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Their website has a nice list of features that they expect to have once
they officially launch, but most of those features aren&amp;rsquo;t available yet.
The documentation is a little light, but the service has a lot of
potential.&lt;/p&gt;

&lt;h2 id=&#34;dotcloud-com:bcec1efcbef3921a30bfadad97f88500&#34;&gt;dotCloud.com&lt;/h2&gt;

&lt;p&gt;Blog post: &lt;a href=&#34;http://kencochrane.net/blog/2011/04/deploying-my-django-application-to-dotcloud/&#34;&gt;Deploying my Django application to
dotcloud.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They have a ton of money ($10M), and with it, a ton of features. They
are very developer friendly, but you need to be pretty technical, it
isn&amp;rsquo;t quite ready for beginners. Good set of documentation.&lt;/p&gt;

&lt;p&gt;[&lt;strong&gt;Full disclosure&lt;/strong&gt;: I now work for dotCloud]&lt;/p&gt;

&lt;h2 id=&#34;apphosted-com:bcec1efcbef3921a30bfadad97f88500&#34;&gt;AppHosted.com&lt;/h2&gt;

&lt;p&gt;Blog post: &lt;a href=&#34;http://kencochrane.net/blog/2011/05/apphosted-com-django-hosting-review/&#34;&gt;apphosted.com Django Hosting
Review&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Built with security, stability and scalability on their mind from the
beginning. They have a solid offering, and they look to be targeting
enterprise customers who will pay more for that peace of mind. They are
currently lacking some key features, which I&amp;rsquo;m sure they will be adding
soon. Good set of documentation.&lt;/p&gt;

&lt;h2 id=&#34;djangozoom-com:bcec1efcbef3921a30bfadad97f88500&#34;&gt;DjangoZoom.com&lt;/h2&gt;

&lt;p&gt;Blog post: &lt;a href=&#34;http://kencochrane.net/blog/2011/06/djangozoom-com-review/&#34;&gt;DjangoZoom.com
Review&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Built to be fast and easy to use, still missing some key features, but
I&amp;rsquo;m sure they will be available by the time they go live. Decent amount
of documentation.&lt;/p&gt;

&lt;h2 id=&#34;heroku-com:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Heroku.com&lt;/h2&gt;

&lt;p&gt;Blog post: &lt;a href=&#34;http://kencochrane.net/blog/2011/11/developers-guide-for-running-django-apps-on-heroku/&#34;&gt;Developers guide for running django apps on
Heroku&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Originally built as a Ruby on Rails service, they have now added support
for python. The service is still in beta, but it has a lot of potential.
It looks a lot like what dotCloud is offering, with the ability to run
code from almost any language, and a ton of different add-ons for lots
of different services.&lt;/p&gt;

&lt;h1 id=&#34;awards:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Awards&lt;/h1&gt;

&lt;h2 id=&#34;fastest-deployments:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Fastest Deployments:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://DjangoZoom.com&#34;&gt;DjangoZoom.com&lt;/a&gt; - Zoom is right, it doesn&amp;rsquo;t take
long to configure your application and have it up and running on their
servers.&lt;/p&gt;

&lt;h2 id=&#34;easiest-to-use:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Easiest To Use:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://DjangoZoom.com&#34;&gt;DjangoZoom.com&lt;/a&gt; - No command line interface
needed, just a web browser, a project in a git repo that it has access
too, and a few questions answered and your app is up and running.&lt;/p&gt;

&lt;h2 id=&#34;most-features:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Most Features:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://dotcloud.com&#34;&gt;dotCloud.com&lt;/a&gt; - They raised \$10 Million, and they
are spending it on hiring people, buying companies, and building
services. They have a bunch of services currently and they don&amp;rsquo;t plan on
stopping, their roadmap has everything on it, and I think if you give
them enough time they will eventually have a service for everything.&lt;/p&gt;

&lt;h2 id=&#34;most-developer-friendly:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Most Developer Friendly:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://dotcloud.com&#34;&gt;dotCloud.com&lt;/a&gt; - They give lots of features without
handcuffing the developer. They are the only company with full database
and shell access. They do a good job of offering the same type of
service a developer could get if they built it themselves.&lt;/p&gt;

&lt;h2 id=&#34;best-overall-value:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Best Overall Value:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://ep.io&#34;&gt;ep.io&lt;/a&gt; - This one is hard since most of the services
don&amp;rsquo;t have any pricing listed, but currently ep.io is in the lead, they
offer reasonable prices with a nice Free tier. This allows developers to
try out the service for FREE, as well as run smaller pet projects that
they might not have tried before because they didn&amp;rsquo;t want to pay for
hosting. They have the second most features available, second to only
dotCloud, and there service is pretty solid.&lt;/p&gt;

&lt;h2 id=&#34;easiest-project-setup:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Easiest Project Setup:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://apphosted.com&#34;&gt;apphosted.com&lt;/a&gt; - Their goal was to make it real
easy to get your project up onto their servers without having to change
your project, and they did that, there was very little if any changes I
needed to make in order to get my application up on their servers.&lt;/p&gt;

&lt;h1 id=&#34;django-feature-hosting-matrix:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Django Feature Hosting Matrix&lt;/h1&gt;

&lt;p&gt;To make things easier when comparing all of the different services I
have built this matrix with all of the information I compiled from each
of the services. I don&amp;rsquo;t know the answers for all services, but I&amp;rsquo;ll
update it when I find out those answers. If you know the answers feel
free to post a comment to let me know.&lt;/p&gt;

&lt;p&gt;I have included all of the new django services as well as google app
engine and webfaction.com, a tradition hosting service. This should make
it a little easier to see how these new services compare to other
hosting options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Chart removed since it was out of date]&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;who-wins:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Who wins?&lt;/h1&gt;

&lt;p&gt;It is really hard to pick just one winner, mainly because most of these
services are still in beta and not quite finished yet. Also because each
service is a little different, and it will depend on what you are trying
to do. So, go out try them out, and let me know which one you picked.&lt;/p&gt;

&lt;p&gt;The real winner is us, the developers, and the python community in
general. We now have a bunch of really cool services that will make our
lives better, and that is awesome.&lt;/p&gt;

&lt;h1 id=&#34;thank-you:bcec1efcbef3921a30bfadad97f88500&#34;&gt;Thank you!&lt;/h1&gt;

&lt;p&gt;I want to thank all of the people who made these services, and gave me
early access to their systems so that I could play around with them. I
wish them the best of luck, and hope they all are really successful, and
they are around for a long time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Day in Gondor.io</title>
      <link>http://www.kencochrane.net/blog/2011/04/my-day-gondorio/</link>
      <pubDate>Fri, 22 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://www.kencochrane.net/blog/2011/04/my-day-gondorio/</guid>
      <description>

&lt;p&gt;The other day I wrote about a new &lt;a href=&#34;http://kencochrane.net/blog/2011/04/my-experiences-with-epio/&#34;&gt;Django hosting service called
ep.io&lt;/a&gt; ,
after I made that post, I was lucky enough to get an invite for the
private beta of &lt;a href=&#34;http://gondor.io&#34;&gt;gondor.io&lt;/a&gt;, which is similar to
&lt;a href=&#34;http://ep.io&#34;&gt;ep.io&lt;/a&gt; but from the folks over at
&lt;a href=&#34;http://eldarion.com/&#34;&gt;Eldarion&lt;/a&gt;. In order to test out the service I
decided to take my Dango blog application and deploy it to Gondor and I
kept notes along the way, here are those notes.&lt;/p&gt;

&lt;p&gt;The sign up process was pretty typical, register and then validate your
email address. Once into the system you are offered the ability to
create a site. So I created my site &amp;ldquo;KenCochrane_blog&amp;rdquo; and it gave me a
key which I&amp;rsquo;ll use later on. Not knowing where to start I headed over to
the &lt;a href=&#34;https://gondor.io/support/&#34;&gt;documentation&lt;/a&gt;. Which, as of this
writing, is pretty basic, which is understandable since they are still
in beta. I&amp;rsquo;m assuming the documentation will get better as they move
forward. The current documentation and this blog post should get you
enough information to get going.&lt;/p&gt;

&lt;h1 id=&#34;setting-up-my-development-environment:fba4efda7478f8b07a6ceb2f2ba8e87c&#34;&gt;Setting up my development environment:&lt;/h1&gt;

&lt;p&gt;Gondor uses a file to store your login credentials, so that you don&amp;rsquo;t
need to type it in everytime. It is pretty basic, here is how I
installed mine on my MacBook Pro (OSX 10.6).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# create the file, and edit it.
$ emacs ~/.gondor

# copy this into the file.

[auth]
username = &amp;lt;my_username&amp;gt;
password = &amp;lt;my_password&amp;gt;

# change the permissions so that only you can access it.
$ chmod 600 ~/.gondor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like all cool projects these days, gondor uses pip and virtualenv, I&amp;rsquo;m
assuming you already have virtualenv and pip installed so I&amp;rsquo;ll move onto
the fun stuff.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# make my virtualenv called gondor
$ mkvirtualenv gondor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From this point on, all of these commands are done in the new gondor
virtual environment that I just created. Gondor uses a command line
client to manage your application, we need to install that before we can
do anything.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ pip install gondor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since I&amp;rsquo;m going to need to make changes to my blog, I decided to fork it
and make all of my changes to gondor on the new fork. The new fork is on
bitbucket and it is called kencochranenet_gondor. Now that I have it
forked I can pull it down locally.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# go to my projects directory and clone my blog.
$ cd ~/projects
$ hg clone https://bitbucket.org/kencochrane/kencochranenet_gondor kencochranenet_gondor
$ cd kencochranenet_gondor/mysite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have some code to deploy, lets introduce the code to gondor.
We use the init command inside of our django project and it will create
a .gondor directory with a config file and some defaults.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ gondor init &amp;lt;site_key&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Gondor expects your project to be in a certain layout in order to work.
For more info see the documentation:
&lt;a href=&#34;https://gondor.io/support/project-layout/&#34;&gt;https://gondor.io/support/project-layout/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since my blog didn&amp;rsquo;t have everything in the right place, I need to add
some directories and move some files around. One of the files I needed
to add was deploy/wsgi.py, here is what it contains. Notice the two
sys.path.insert lines. I added those because the &lt;a href=&#34;https://gondor.io/support/setting-up-django/&#34;&gt;gondor
documentation&lt;/a&gt; told me
too.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode python&#34;&gt;import os, sys

sys.path.insert(0, os.path.abspath(os.path.join(os.path.abspath(os.path.dirname(__file__)), os.pardir, os.pardir)))
sys.path.insert(0, os.path.abspath(os.path.join(os.path.abspath(os.path.dirname(__file__)), os.pardir)))

from django.core.handlers.wsgi import WSGIHandler
os.environ[&amp;quot;DJANGO_SETTINGS_MODULE&amp;quot;] = &amp;quot;mysite.settings&amp;quot;
application = WSGIHandler()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I also had to add the same sys.path lines to my manage.py settings. Here
is my new manage.py&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode python&#34;&gt;#!/usr/bin/env python
from django.core.management import execute_manager
import sys
import os

sys.path.insert(0, os.path.abspath(os.path.join(os.path.abspath(os.path.dirname(__file__)), os.pardir, os.pardir)))
sys.path.insert(0, os.path.abspath(os.path.join(os.path.abspath(os.path.dirname(__file__)), os.pardir)))

try:
    import settings # Assumed to be in the same directory.
except ImportError:
    sys.stderr.write(&amp;quot;Error: Can&#39;t find the file &#39;settings.py&#39; in the directory containing %r. It appears you&#39;ve customized things.\nYou&#39;ll have to run django-admin.py, passing it your settings module.\n(If the file settings.py does indeed exist, it&#39;s causing an ImportError somehow.)\n&amp;quot; % __file__)
    sys.exit(1)

if __name__ == &amp;quot;__main__&amp;quot;:
    execute_manager(settings)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Gondor will automagically add your database and other settings to your
app for you at deployment, and in order for that to work correctly you
need to add the following at the end of your settings.py file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode python&#34;&gt;try:
    from local_settings import *
except ImportError:
    pass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My blog is using south to manage south migrations, so we need to edit
the .gondor/config file to enable this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;# edit .gondor/config changed migrations to migrations=south
emacs .gondor/config

# change this line
migrations = None
# to
migrations = south
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have made all of the changes that we need. I need to commit
all of my changes. It is important to note that because gondor uses
mecurial or git for managing your project files, you need to always
remember to add new files and commit all changes before you try to
deploy your application.&lt;/p&gt;

&lt;h2 id=&#34;deployment:fba4efda7478f8b07a6ceb2f2ba8e87c&#34;&gt;Deployment:&lt;/h2&gt;

&lt;p&gt;Next step is deployment. Before we get there, we need to create a new
instance. Gondor allows you to deploy multiple versions of your code,
this lets you have a production version and development versions all
running at the same time. Gondor calls these different deployments
&amp;lsquo;instances&amp;rsquo;. We run the &amp;lsquo;gondor create master&amp;rsquo; command, which will
create a new instance called, you guessed it, &amp;lsquo;master&amp;rsquo;, and this is what
you should see.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ gondor create master
Reading configuration... [ok]
Creating instance on Gondor... [ok]   

Run: gondor deploy master HEAD
Visit: http://jg437.o1.gondor.io/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This created the master instance and tells us what our url for the
instance will be. Now according to the log message I just need to run
&amp;lsquo;gondor deploy master HEAD&amp;rsquo; and that will deploy my app. Lets do that
now.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ gondor deploy master HEAD
  Reading configuration... [ok]
  ERROR: could not map &#39;HEAD&#39; to a SHA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, it didn&amp;rsquo;t work, after lots of digging, I realized that
the code was assuming I was on a branch called HEAD, which wasn&amp;rsquo;t
correct. I think HEAD is the default git branch, and in mercirual, it is
default. Just to be sure, I checked my mercurial branch.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ hg summary

parent: 122:76f0c2271b7f tip
 gondor settings
branch: default
commit: (clean)

update: (current)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running the quick &amp;lsquo;hg summary&amp;rsquo; command lets me know that my branch is
default, so I then made the changes to my command and reran the script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ gondor deploy master default

Reading configuration... [ok]
Building tarball from default... [ok]
Pushing tarball to Gondor...
Deploying... [failed]

pip has failed installing your requirements. Here is the output we saw:

Downloading/unpacking Django==1.2.5 (from -r mysite/requirements/project.txt (line 1))
Creating supposed download cache at /var/gondor/instances/.cache-i194/pip-download
  Storing download in cache at ./.cache-i194/pip-download/http%3A%2F%2Fpypi.python.org%2Fpackages%2Fsource%2FD%2FDjango%2FDjango-1.2.5.tar.gz
  Running setup.py egg_info for package Django

Downloading/unpacking MySQL-python==1.2.3c1 (from -r mysite/requirements/project.txt (line 2))
  Storing download in cache at ./.cache-i194/pip-download/http%3A%2F%2Fpypi.python.org%2Fpackages%2Fsource%2FM%2FMySQL-python%2FMySQL-python-1.2.3c1.tar.gz
  Running setup.py egg_info for package MySQL-python
    sh: mysql_config: not found
    Traceback (most recent call last):
      File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 14, in &amp;lt;module&amp;gt;
      File &amp;quot;/var/gondor/instances/.cache-i194/pip-build/MySQL-python/setup.py&amp;quot;, line 15, in &amp;lt;module&amp;gt;
        metadata, options = get_config()
      File &amp;quot;setup_posix.py&amp;quot;, line 43, in get_config
        libs = mysql_config(&amp;quot;libs_r&amp;quot;)
      File &amp;quot;setup_posix.py&amp;quot;, line 24, in mysql_config
        raise EnvironmentError(&amp;quot;%s not found&amp;quot; % (mysql_config.path,))
    EnvironmentError: mysql_config not found
    Complete output from command python setup.py egg_info:
    sh: mysql_config: not found

Traceback (most recent call last):

  File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 14, in &amp;lt;module&amp;gt;

  File &amp;quot;/var/gondor/instances/.cache-i194/pip-build/MySQL-python/setup.py&amp;quot;, line 15, in &amp;lt;module&amp;gt;

    metadata, options = get_config()

  File &amp;quot;setup_posix.py&amp;quot;, line 43, in get_config

    libs = mysql_config(&amp;quot;libs_r&amp;quot;)

  File &amp;quot;setup_posix.py&amp;quot;, line 24, in mysql_config

    raise EnvironmentError(&amp;quot;%s not found&amp;quot; % (mysql_config.path,))

EnvironmentError: mysql_config not found


Command python setup.py egg_info failed with error code 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We had mysql-python in our requirements file, and gondor doesn&amp;rsquo;t support
mysql, so we need to remove that, commit and try again.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ gondor deploy master default

Reading configuration... [ok]
Building tarball from default... [ok]
Pushing tarball to Gondor...
Deploying... [failed]

unable to build static (collectstatic or build_static not found)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;closer but no cigar, gondor uses staticfiles (new in django 1.3 or
django-staticfiles) to manage static files. If you aren&amp;rsquo;t currently
using static files add django-staticfiles to your pre django 1.3 app, or
upgrade to django 1.3 and configure static files. To be honest, this was
the biggest problem I had, it took me a while to get this correct. I was
lucky enough to get some help on the #gondor IRC channel, which helped
me along the way. With all of my changes made I committed them and tried
again.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ gondor deploy master default
Reading configuration... [ok]
Building tarball from default... [ok]
Pushing tarball to Gondor...
Deploying... [ok]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That worked!! woo hoo! now if I go to the URL
(&lt;a href=&#34;http://jg437.o1.gondor.io/&#34;&gt;http://jg437.o1.gondor.io/&lt;/a&gt;) I got earlier, I should see something if
all went well. I went to the site, and bingo, all working.. no data but
it is there. Now how do I create my django admin user? Normally that is
done when you do your initial syncdb, and since that is done by gondor,
it doesn&amp;rsquo;t give you a chance. Looking thru all of the documentation I
didn&amp;rsquo;t find anything. So I went and looked at the gondor client source
code, and I found my answer. I kicked off the following command,
answered the prompts and bingo, I was in business.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sourceCode bash&#34;&gt;$ gondor run master createsuperuser
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;conclusion:fba4efda7478f8b07a6ceb2f2ba8e87c&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Now that I have my app up and running and I have admin access I could
switch over my blog to the new service if I wanted. I&amp;rsquo;ll hold off for
right now, but you get the picture. All and all I think this is going to
be a nice service once they are fully up and running. It isn&amp;rsquo;t as far
along as ep.io, but I&amp;rsquo;m sure it won&amp;rsquo;t be long before they are caught up.
I&amp;rsquo;ll try and keep this post updated as I learn more about the service
and they release new features.&lt;/p&gt;

&lt;h3 id=&#34;update:fba4efda7478f8b07a6ceb2f2ba8e87c&#34;&gt;Update:&lt;/h3&gt;

&lt;p&gt;Read how this service stacks up against other services like it in my
&lt;a href=&#34;http://kencochrane.net/blog/2011/06/django-hosting-roundup-who-wins/&#34;&gt;Django hosting
roundup&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2/16/2012: Full disclosure. On Feb 16th 2012, I accepted a job with
dotCloud a competitor to gondor.io. I plan on keeping this blog post up
to date and impartial. If you think there are any errors, please let me
know in the comments.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>